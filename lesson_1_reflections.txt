How did viewing a diff between two versions of a file help you see the bug that was introduced?

Using diff allowed me to quickly find the the specific line of code with the error.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Having access to entire history allows me to roll back to previous versions of an application.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
vs having versions automatically saved, like Google docs does?

Pros for Manual Commit
1. Your commit history will be easier to read and understand
2. You will not have commits with incomplete code
3. Commits will be made at logical points in the development

Cons for Manual Commit
1. Not making a commit at logical points
2. Committing to often

Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

Git allows saving of multiple files because in most applications files are related to each other
and need to reference parts of code in differenct files. CakePHP, HTML and CSS are examples of
programming languages that rely on other files to make the code function as a whole.

How can you use the commands git log and git diff to view the history of files?
Using git log pulles all the committs that were done for the selected application. Using git diff allows me to see the differences between the selected committs.

How might using version control make you more confident to make changes that could break something?
Using version control allows me to revert to a previous commit if I introduce a bug into the code by the most recent changes.

What do you want to try using Git for?
Git seems to be a pain in the back side. But once I get used to using the tool I can see
the benefit of using it to keep track of code changes and managing changes to a project
or multiple projects. It is a learning curve but it will smooth out over time. I will use Git for projects in the Udacity Front End Web Developer NanoDegree.